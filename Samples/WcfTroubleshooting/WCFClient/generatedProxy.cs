//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5483
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://WCFHost/", ConfigurationName="ICalculator")]
public interface ICalculator
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://WCFHost/ICalculator/Add", ReplyAction="http://WCFHost/ICalculator/AddResponse")]
    double Add(double number1, double number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://WCFHost/ICalculator/Subtract", ReplyAction="http://WCFHost/ICalculator/SubtractResponse")]
    double Subtract(double number1, double number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://WCFHost/ICalculator/Multiply", ReplyAction="http://WCFHost/ICalculator/MultiplyResponse")]
    double Multiply(double number1, double number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://WCFHost/ICalculator/Divide", ReplyAction="http://WCFHost/ICalculator/DivideResponse")]
    float Divide(int number1, int number2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://WCFHost/ICalculator/PowerOf", ReplyAction="http://WCFHost/ICalculator/PowerOfResponse")]
    double PowerOf(double number1, double number2);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface ICalculatorChannel : ICalculator, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class CalculatorClient : System.ServiceModel.ClientBase<ICalculator>, ICalculator
{
    
    public CalculatorClient()
    {
    }
    
    public CalculatorClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public CalculatorClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public double Add(double number1, double number2)
    {
        return base.Channel.Add(number1, number2);
    }
    
    public double Subtract(double number1, double number2)
    {
        return base.Channel.Subtract(number1, number2);
    }
    
    public double Multiply(double number1, double number2)
    {
        return base.Channel.Multiply(number1, number2);
    }
    
    public float Divide(int number1, int number2)
    {
        return base.Channel.Divide(number1, number2);
    }
    
    public double PowerOf(double number1, double number2)
    {
        return base.Channel.PowerOf(number1, number2);
    }
}
